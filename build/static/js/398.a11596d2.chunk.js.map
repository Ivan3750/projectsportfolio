{"version":3,"file":"static/js/398.a11596d2.chunk.js","mappings":"8JACA,SAAgB,SAAW,2BAA2B,KAAO,uBAAuB,UAAY,4BAA4B,cAAgB,gCAAgC,SAAW,2BAA2B,WAAa,6BAA6B,MAAQ,yB,aCGpQ,MAAMA,UAAkCC,EAAAA,UACpCC,WAAAA,CAAYC,GACRC,MAAMD,GAAO,KAEjBE,MAAQ,CAAEC,MAAO,GACLC,SAAU,IACpB,KAEDC,WAAa,KACV,MAAMC,EAAU,CACZC,GAAIC,KAAKN,MAAMC,MAAMM,OACrBC,KAAMF,KAAKN,MAAME,UAAY,oDAEjCI,KAAKG,SAAS,CAACR,MAAO,IAAIK,KAAKN,MAAMC,MAAOG,KAC5CE,KAAKG,SAAS,CAACP,SAAU,IAAI,EAC/B,KACDQ,WAAcL,IACX,IAAIM,EAAcL,KAAKN,MAAMC,MAAMW,QAAOC,GAAQA,EAAKR,KAAOA,IAC9DC,KAAKG,SAAS,CAACR,MAAOU,GAAa,CAfvC,CAoBAG,MAAAA,GACI,OACAC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAEC,SAASC,SAAA,EACvBJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAEG,SAASD,SAAA,EAC3BE,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAON,UAAWC,EAAEM,UAAWC,YAAY,iBAAiBC,MAAOnB,KAAKN,MAAME,SAAUwB,SAAUC,IAAMrB,KAAKG,SAAS,CAACP,SAAUyB,EAAEC,OAAOH,OAAO,KACzJJ,EAAAA,EAAAA,KAAA,UAAQQ,QAASvB,KAAKH,WAAYa,UAAWC,EAAEa,cAAcX,SAAC,eAElEE,EAAAA,EAAAA,KAAA,KAAGU,MAAO,CAACC,MAAO,SAASb,SAAC,gBAC5BE,EAAAA,EAAAA,KAAA,OAAKL,UAAWC,EAAEhB,MAAMkB,SAEhBb,KAAKN,MAAMC,MAAMgC,KAAKpB,IAEdE,EAAAA,EAAAA,MAAA,OAAmBC,UAAWC,EAAEJ,KAAKM,SAAA,EACjCE,EAAAA,EAAAA,KAAA,KAAGL,UAAWC,EAAEf,SAASiB,SAAEN,EAAKL,QAChCa,EAAAA,EAAAA,KAAA,UAAQL,UAAWC,EAAEiB,WAAYL,QAASA,KAAOvB,KAAKI,WAAWG,EAAKR,GAAG,EAAEc,SAAC,aAFtEN,EAAKR,UASvC,EAGJ,S","sources":["webpack://projectsportfolio/./src/pages/ClassComponentsEventsPage/ToDoList.module.css?0ea5","pages/ClassComponentsEventsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"todolist\":\"ToDoList_todolist__WjT7p\",\"task\":\"ToDoList_task__3nG4U\",\"inputTask\":\"ToDoList_inputTask__AWC2p\",\"btnCreateTask\":\"ToDoList_btnCreateTask__pZbyo\",\"inputBox\":\"ToDoList_inputBox__dhHF3\",\"taskRemove\":\"ToDoList_taskRemove__o-hGw\",\"tasks\":\"ToDoList_tasks__uiIrW\"};","import { Component } from \"react\";\r\nimport s from \"./ClassComponentsEventsPage/ToDoList.module.css\"\r\n\r\n\r\nclass ClassComponentsEventsPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = { tasks: [],\r\n                taskName: \"\"\r\n     }\r\n\r\n     createTask = () =>{\r\n        const newTask = {\r\n            id: this.state.tasks.length,\r\n            text: this.state.taskName || \"Безназви\"\r\n        }\r\n        this.setState({tasks: [...this.state.tasks, newTask]})\r\n        this.setState({taskName: \"\"})\r\n     }\r\n     removeTask = (id) =>{\r\n        let newTaskList = this.state.tasks.filter(task => task.id !== id)\r\n        this.setState({tasks: newTaskList})\r\n     }\r\n\r\n     \r\n\r\n    render() { \r\n        return ( \r\n        <div className={s.todolist}>\r\n            <div className={s.inputBox}>\r\n            <input type=\"text\" className={s.inputTask} placeholder=\"Enter TaskName\" value={this.state.taskName} onChange={e => {this.setState({taskName: e.target.value})}} />\r\n                <button onClick={this.createTask} className={s.btnCreateTask}>Create</button>\r\n            </div>\r\n            <p style={{color: \"white\"}}>Task List:</p>\r\n            <div className={s.tasks}>\r\n                {\r\n                    this.state.tasks.map((task) => {\r\n                        return(\r\n                            <div key={task.id} className={s.task}>\r\n                                <p className={s.taskName}>{task.text}</p>\r\n                                <button className={s.taskRemove} onClick={() => {this.removeTask(task.id)}}>Remove</button>\r\n                            </div>\r\n                        )\r\n                })\r\n            }\r\n            </div>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default ClassComponentsEventsPage ;"],"names":["ClassComponentsEventsPage","Component","constructor","props","super","state","tasks","taskName","createTask","newTask","id","this","length","text","setState","removeTask","newTaskList","filter","task","render","_jsxs","className","s","todolist","children","inputBox","_jsx","type","inputTask","placeholder","value","onChange","e","target","onClick","btnCreateTask","style","color","map","taskRemove"],"sourceRoot":""}